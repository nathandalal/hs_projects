      PROGRAM GEIGER
C
C NATHAN H. DALAL
C APRIL 18, 2014
C
C GEIGER COUNTER PROJECT
C
C DATA FOR A GEIGER COUNTER IS STORED IN A FILE
C THIS PROGRAM READS THE FILE AND THEN ENACTS DATA ANALYSIS ON THE FILE
C THIS PROGRAM CALCULATES THE MEAN, STANDARD DEVIATION, MIN Y, MAX Y, 
C AND PRINTS A HISTOGRAM - HOW MANY 0'S, 1'S - FREQ ANALYSIS
C X DIMENSION IS FIXED, Y DIMENSION IS USER SUPPLIED
C
C IMPORTANT!!!
C
C I MADE AN ATTEMPT TO GRAPH, DID NOT WORK.
C PLEASE EVALUATE MY EFFORT IN THE GRAPHING SUBOUTINE.
C THANKS.
C

C
C PARAMETERS
C
      INTEGER*4 INPFIL
      PARAMETER(INPFIL = 15)
      CHARACTER*16 FILENM
      PARAMETER(FILENM = 'geigerDATA.TXT')
C
C LOCAL VARIABLES
C
      INTEGER*16 LINES
C
C FUNCTION DECLARATIONS
C
      INTEGER*16 LINCNT
C
C COMMON VARAIBLES
C
      REAL*16 MEAN
      REAL*16 STDEV
      REAL*16 YMIN
      REAL*16 YMAX
      COMMON /ANALYZ/ MEAN, STDEV, YMIN, YMAX
C
C DATA STATEMENTS
C
      
C
C MAIN PROGRAM MODULE
C
      MEAN = 0
      STDEV = 0
      YMIN = 0
      YMAX = 0

      OPEN(UNIT = INPFIL, FILE = FILENM, STATUS = 'OLD')

      LINES = LINCNT(INPFIL)

      CALL PDATA(INPFIL, LINES)

      CLOSE(UNIT = INPFIL)

      WRITE (*,*)

      WRITE (*,10) 'Mean:               ', MEAN
 10   FORMAT (1X,A,F8.5)
      WRITE (*,20) 'Standard Deviation: ', STDEV
 20   FORMAT (1X,A,F8.5)
      WRITE (*,30) 'Minimum Value:      ', YMIN
 30   FORMAT (1X,A,F8.5)
      WRITE (*,40) 'Maximum Value:      ', YMAX
 40   FORMAT (1X,A,F8.5)

      WRITE (*,*)

      STOP
      END PROGRAM

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C FUNCTIONS AND SUBROUTINES
C



C FUNCTION LINCNT(INPFIL)
C
C READS THE INPUT FILE TO DETERMINE THE
C NUMBER OF LINES IN THE FILE.
C THE NUMBER OF LINES IS USED LATER IN INIT OF ARRAYS.
C
C RETURNS NUMBER OF LINES IN FILE
C
C INPFIL - UNIT NUMBER OF INPUT FILE
C
      FUNCTION LINCNT(INPFIL)
      INTEGER*16 LINCNT
      INTEGER*4 INPFIL
C
C LOCAL VARIABLES
C
      CHARACTER*256 DUMMY
C
C PROGRAM MODULE
C
      LINCNT = 0
 50   READ(INPFIL, *, END = 60) DUMMY
            LINCNT = LINCNT + 1
            GOTO 50
 60   CONTINUE
      REWIND(INPFIL)

      RETURN
      END

C SUBROUTINE PDATA(INPFIL, LINES)
C
C READS IN DATA INTO TWO DYNAMICALLY ALLOCATED ARRAYS.
C LENGTH OF THESE ARRAYS IS VAR LINES.
C
C ALSO GETS HEIGHT FROM USER FOR FREQUENCY GRAPH
C
C INPFIL - UNIT NUMBER OF INPUT FILE
C
C LINES - NUMBER OF LINES IN FILE
C
      SUBROUTINE PDATA(INPFIL, LINES)
      INTEGER*4 INPFIL
      INTEGER*16 LINES
C
C LOCAL VARIABLES
C
      REAL DATE(LINES)
      REAL DATA(LINES)
      INTEGER*16 I
      INTEGER*16 HEIGHT
C
C PROGRAM MODULE
C
      DO 70 I=1,LINES
            READ (INPFIL, *) DATE(I),DATA(I)
 70   CONTINUE

      CALL CALC (LINES, DATA)

C      WRITE (*,*) 'Please enter the graph height: '
C      READ (*,*) HEIGHT
C      WRITE (*,*)

C     CALL GRAPH (LINES, HEIGHT, DATA)

      RETURN
      END

C SUBROUTINE CALC (LINES, DATA)
C 
C FINDS THE MEAN, STANDARD DEVIATION, MIN, AND MAX
C OF THE DATA ARRAY AND STORES IT IN THE ANALYZ COMMON BLOCK.
C
C DATA - ARRAY TO ANALYZE, CONTAINS GEIGER DATA
C
C LINES - LENGTH OF DATA ARRAY
C
      SUBROUTINE CALC(LINES, DATA)
      INTEGER*16 LINES
      REAL DATA(LINES)
C
C PARAMETERS
C
      REAL BIGVAL
      PARAMETER(BIGVAL = 1000000000)
      REAL LITVAL
      PARAMETER(LITVAL = -1000000000)
C
C LOCAL VARIABLES
C
      REAL SUM
      REAL VARIAN
      INTEGER*16 I
C
C COMMON VARIABLES
C
      REAL*16 MEAN
      REAL*16 STDEV
      REAL*16 YMIN
      REAL*16 YMAX
      COMMON /ANALYZ/ MEAN, STDEV, YMIN, YMAX
C
C PROGRAM MODULE
C
      SUM = 0
      DO 80 I=1, LINES
            SUM = SUM + DATA(I)
 80   CONTINUE
      MEAN = SUM / (LINES * 1.0)

      VARIAN = 0
      DO 90 I=1, LINES
            VARIAN = VARIAN + (MEAN - DATA(I))**2
 90   CONTINUE
      VARIAN = VARIAN / (LINES * 1.0)
      STDEV = SQRT(VARIAN)

      YMIN = BIGVAL
      DO 100 I=1, LINES
            IF (YMIN.GT.DATA(I)) THEN 
                  YMIN = DATA(I)
            END IF
 100   CONTINUE

      YMAX = LITVAL
      DO 110 I=1, LINES
            IF (YMAX.LT.DATA(I)) THEN 
                  YMAX = DATA(I)
            END IF
 110  CONTINUE

      RETURN
      END

C SUBROUTINE GRAPH (LINES, HEIGHT, DATA)
C 
C FIRST CONDUCTS FREQUENCY ANALYSIS, OR HOW MANY TIMES
C A SPECIFIC NUMBER APPEARED ON THE GEIGER COUNTER.
C
C THIS THEN DYNAMICALLY ALLOCATES A 2D CHARACTER ARRAY 
C AND PRINTS IT OUT AS A GRAPH.
C THE X AXIS IS CONSTANT, AND THE Y AXIS IS USER SUPPLIED.
C
C LINES - LENGTH OF DATA ARRAY
C
C HEIGHT - HEIGHT THE USER WANTS THE GRAPH TO BE
C
C DATA - ARRAY TO ANALYZE, CONTAINS GEIGER DATA
C
      SUBROUTINE GRAPH (LINES, HEIGHT, DATA)
      INTEGER*16 LINES
      INTEGER*16 HEIGHT
      REAL DATA(LINES)
C
C COMMON VARIABLES
C
      REAL*16 MEAN
      REAL*16 STDEV
      REAL*16 YMIN
      REAL*16 YMAX
      COMMON /ANALYZ/ MEAN, STDEV, YMIN, YMAX
C
C
C LOCAL VARIABLES
C
      INTEGER*16 DMAX
      REAL FREQ (INT(YMAX - YMIN + 1))
      INTEGER*16 I
      INTEGER*16 J
      REAL CONVER
      CHARACTER*1 GRAPHY
      DIMENSION GRAPHY(INT(YMAX - YMIN + 1),HEIGHT)
C
C PROGRAM MODULE
C
      DO 115 I=1, INT(YMAX-YMIN+1)
            FREQ(I)=0
 115  CONTINUE

      DO 120 I=1, LINES
            FREQ (INT(DATA(I)) + 1) = FREQ (INT(DATA(I)) + 1) + 1
 120  CONTINUE

C
C     CONVER = (HEIGHT - 1) / YMAX
C
C     DO 130 I=1, YMAX-MIN+1
C           IF (INT(DATA(I)*CONVER.EQ.0)) THEN
C                 DO 140 J=1, INT(DATA(I)*CONVER)
C                       GRAPHY (I,J) = '*'
C140              CONTINUE
C           ENDIF
C130  CONTINUE
C
C     DO 150 I=1, YMAX-YMIN+1
C           DO 160 J=1, HEIGHT
C                 WRITE(*,A,ADVANCE='NO') GRAPHY(I,J)
C160        CONTINUE
C           WRITE (*,*)
C150  CONTINUE

      RETURN
      END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C BLOCK DATA
C
